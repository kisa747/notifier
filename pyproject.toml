[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mediainfo"
description = '一个方便的邮件收发库'
readme = "README.md"
# hatch 不会自动查找 LICENSE 文件，需要手动指定。
license-files = { paths = ["LICENSE"] }
requires-python = ">=3.9"
dependencies = ["pymediainfo"]
dynamic = ["version"]
keywords = ['python']
authors = [
    { name = "kevin", email = "kevin@example.com" },
]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Development Status :: 5 - Production/Stable",
]

[project.urls]
Homepage = "https://github.com/kisa747"
Documentation = "https://github.com/kisa747/mediainfo#readme"
#Issues = "https://github.com/unknown/mediainfo/issues"
#Source = "https://github.com/unknown/mediainfo"

[tool.hatch.version]
path = "src/mediainfo/__about__.py"

[tool.hatch.build]
only-packages = true
sources = ["src"]
[tool.hatch.build.targets.wheel]


[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
    "mypy",
]

[tool.hatch.envs.default.scripts]
cov = "pytest --cov --cov-report html {args}"
no-cov = "pytest -ra {args}"
my = "mypy src {args}"

[[tool.hatch.envs.test.matrix]]
python = ["310", "311"]

[tool.hatch.envs.docs]
dependencies = ["sphinx", "myst-parser", "furo", "sphinx-autobuild"]

[tool.hatch.envs.docs.scripts]
build = "sphinx-build -M html docs/source docs/build"
serve = "sphinx-autobuild docs/source docs/build/html"


# black配置
[tool.black]
line-length = 90
skip-string-normalization = true
include = '\.py[iw]?$'


# pytest配置
[tool.pytest.ini_options]
#addopts = "-ra -q --strict-config --strict-markers --cov --cov-report html"
addopts = "-s -x"
# 源码目录
pythonpath = ["src"]
# 测试目录
testpaths = ["tests"]
# 控制台显示 logging 日志
log_cli = true
log_cli_level = 'INFO'
log_cli_format = '[%(levelname)s]: %(message)s'
log_cli_date_format = '%Y-%m-%d %H:%M:%S'


[tool.coverage.run]
branch = true
omit = ["src/mediainfo/__about__.py"]
[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]


# mypy配置
[tool.mypy]
ignore_missing_imports = true
